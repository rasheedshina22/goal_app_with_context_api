{"version":3,"sources":["components/Navbar.js","context.js","components/Goal.js","components/Goals.js","components/AddGoal.js","App.js","serviceWorker.js","index.js"],"names":["Navbar","props","react_default","a","createElement","className","href","Context","React","createContext","reducer","state","action","type","Object","objectSpread","goals","concat","toConsumableArray","payload","filter","goal","id","Provider","_Component","_getPrototypeOf2","_this","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","title","dispatch","setState","inherits","createClass","key","value","children","Component","Consumer","Goal","react_router_dom","to","onClick","handleDelete","bind","Goals","map","components_Goal","AddGoal","handleChange","e","target","handleSubmit","preventDefault","uuid","v4","_this2","onSubmit","placeholder","onChange","name","App","context_Provider","components_Navbar","components_AddGoal","components_Goals","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.71dd8172.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Navbar = props => {\r\n  return (\r\n    <div className=\"navbar-fixed\">\r\n      <nav>\r\n        <div className=\"nav-wrapper\">\r\n          <a href=\"#!\" className=\"brand-logo\">\r\n            Goalz The Year\r\n          </a>\r\n        </div>\r\n      </nav>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import React, { Component } from \"react\";\r\n\r\nconst Context = React.createContext();\r\n\r\n//define reducer\r\n\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"ADD_GOAL\":\r\n      return {\r\n        ...state,\r\n        goals: [...state.goals, action.payload]\r\n      };\r\n    case \"DELETE_GOAL\":\r\n      return {\r\n        ...state,\r\n        goals: state.goals.filter(goal => goal.id !== action.payload)\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport class Provider extends Component {\r\n  state = {\r\n    goals: [\r\n      { id: 1, title: \"read 50 books this year\" },\r\n      { id: 2, title: \"master react this year\" },\r\n      { id: 3, title: \"master Node and Express this year\" },\r\n      { id: 4, title: \"master vue this year\" },\r\n      { id: 5, title: \"master angular this year\" }\r\n    ],\r\n    dispatch: action => this.setState(state => reducer(state, action))\r\n  };\r\n  render() {\r\n    return (\r\n      <Context.Provider value={this.state}>\r\n        {this.props.children}\r\n      </Context.Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport const Consumer = Context.Consumer;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Consumer } from \"../context\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass Goal extends Component {\r\n  handleDelete(dispatch, id) {\r\n    dispatch({\r\n      type: \"DELETE_GOAL\",\r\n      payload: id\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { goal } = this.props;\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div>\r\n              <ul className=\"collection\">\r\n                <li className=\"collection-item\">\r\n                  {goal.title}\r\n                  <Link to=\"/\" className=\"secondary-content\">\r\n                    <i className=\"material-icons edit\">edit</i>\r\n                  </Link>\r\n                  <Link to=\"/\" className=\"secondary-content\">\r\n                    <i\r\n                      //always include 'this' as the first augument lest you get an error;\r\n                      onClick={this.handleDelete.bind(this, dispatch, goal.id)}\r\n                      className=\"material-icons delete\"\r\n                    >\r\n                      delete\r\n                    </i>\r\n                  </Link>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nGoal.propTypes = {\r\n  goal: PropTypes.object.isRequired\r\n};\r\n\r\nexport default Goal;\r\n","import React from \"react\";\r\nimport Goal from \"./Goal\";\r\nimport { Consumer } from \"../context\";\r\n//context now works\r\n\r\nconst Goals = props => {\r\n  return (\r\n    <Consumer>\r\n      {value => {\r\n        const { goals } = value;\r\n        return (\r\n          <div className=\"container\">\r\n            {goals.length !== 0 ? (\r\n              goals.map(goal => {\r\n                return <Goal goal={goal} key={goal.id} />;\r\n              })\r\n            ) : (\r\n              <h2>You dont have anymore goals</h2>\r\n            )}\r\n          </div>\r\n        );\r\n      }}\r\n    </Consumer>\r\n  );\r\n};\r\n\r\nexport default Goals;\r\n","import React, { Component } from \"react\";\r\nimport { Consumer } from \"../context\";\r\nimport uuid from \"uuid\";\r\n\r\nclass AddGoal extends Component {\r\n  state = {\r\n    title: \"\"\r\n  };\r\n\r\n  handleChange = e => {\r\n    this.setState({ title: e.target.value });\r\n  };\r\n  //dispatch must always come before the event object lest you get errors\r\n  handleSubmit = (dispatch, e) => {\r\n    e.preventDefault();\r\n    const new_goal = {\r\n      id: uuid.v4(),\r\n      title: this.state.title\r\n    };\r\n    //dispatch the action to the reducer\r\n    dispatch({\r\n      type: \"ADD_GOAL\",\r\n      payload: new_goal\r\n    });\r\n\r\n    //clear the form\r\n    this.setState({ title: \"\" });\r\n  };\r\n  render() {\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"container\">\r\n              <div className=\"row\">\r\n                <form\r\n                  className=\"col s12\"\r\n                  onSubmit={this.handleSubmit.bind(this, dispatch)}\r\n                >\r\n                  <div className=\"row\">\r\n                    <div className=\"input-field s6\">\r\n                      <input\r\n                        type=\"text\"\r\n                        placeholder=\"Enter a goal for the Year...\"\r\n                        onChange={this.handleChange}\r\n                        name=\"title\"\r\n                        value={this.state.title}\r\n                      />\r\n                      <input\r\n                        type=\"submit\"\r\n                        value=\"Add Goal\"\r\n                        className=\"btn btn-primary\"\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddGoal;\r\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport Navbar from \"./components/Navbar\";\nimport Goals from \"./components/Goals\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport AddGoal from \"./components/AddGoal\";\nimport { Provider } from \"./context\";\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider>\n        <Router>\n          <div className=\"App\">\n            <Navbar />\n            <AddGoal />\n            <Goals />\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}